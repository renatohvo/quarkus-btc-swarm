version: '3.3'

services:
  mysql-bitcoin:
    image: renatohvo/mysql-quarkus-db:8.0.34
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${DB_ROOT_PASSWORD}
    command:
      --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
      --default-authentication-plugin=mysql_native_password
      --init-file /docker-entrypoint-initdb.d/bitcoin-script.sql
    volumes:
      - mysql_data:/var/lib/mysql
      - ./bitcoin-script.sql:/docker-entrypoint-initdb.d/bitcoin-script.sql
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]  # Executar apenas no manager
    ports:
      - 3306:3306
    networks:
      - quarkus

  bitcoin-jvm:
    image: renatohvo/bitcoin-quarkus-jvm:latest
    build:
      context: ./quarkus-btc
      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
    environment:
      QUARKUS_DATASOURCE_PASSWORD: ${DB_ROOT_PASSWORD}
      QUARKUS_DATASOURCE_URL: jdbc:mysql://mysql-bitcoin:3306/bitcoin?autoReconnect=true
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
    networks:
      - quarkus
    ports:
      - 8080:8080
    depends_on:
      - mysql-bitcoin

  prometheus:
    image: prom/prometheus:v2.26.0
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - 9090:9090
    networks:
      - quarkus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      --config.file=/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana-enterprise
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - 3000:3000
    networks:
      - quarkus
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

  portainer:
    image: portainer/portainer-ce:latest
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    deploy:
      mode: global  # 1 instância por nó
      restart_policy:
        condition: on-failure
    ports:
      - "9000:9000"
    networks:
      - quarkus

  # caddy:
  #   image: caddy:latest
  #   restart: unless-stopped
  #   configs: # external:true => docker config create caddyfile ./caddy/Caddyfile
  #     - source: caddyfile
  #       target: /etc/caddy/Caddyfile
  #   deploy:
  #     replicas: 3  # HA para proxy
  #     restart_policy:
  #       condition: on-failure
  #   volumes:
  #     - caddy_site:srv
  #     - caddy_data:/data
  #     - caddy_config:/config
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   networks:
  #     - quarkus

configs:
  caddyfile:
    file: ./caddy/Caddyfile

networks:
  quarkus:
    driver: overlay

volumes:
  mysql_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  portainer_data:
    driver: local
  caddy_site:
    driver: local
  caddy_data:
    driver: local
  caddy_config:
    driver: local
